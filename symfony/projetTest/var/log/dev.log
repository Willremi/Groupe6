[2023-06-01T18:56:52.626772+00:00] php.INFO: User Deprecated: Class "Symfony\Component\HttpClient\TraceableHttpClient" should implement method "Symfony\Contracts\HttpClient\HttpClientInterface::withOptions(array $options)": Returns a new instance of the client with new default options. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Class \"Symfony\\Component\\HttpClient\\TraceableHttpClient\" should implement method \"Symfony\\Contracts\\HttpClient\\HttpClientInterface::withOptions(array $options)\": Returns a new instance of the client with new default options. at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\error-handler\\DebugClassLoader.php:387)"} []
[2023-06-01T18:56:52.627315+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2023-06-01T18:56:52.628276+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2023-06-01T18:56:52.628436+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2023-06-01T18:56:52.628538+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2023-06-01T18:56:52.628643+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:34)"} []
[2023-06-01T18:56:52.628807+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:82)"} []
[2023-06-01T18:56:52.628910+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:105)"} []
[2023-06-01T18:56:52.629007+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:122)"} []
[2023-06-01T18:56:52.629103+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:62)"} []
[2023-06-01T18:56:52.629199+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:91)"} []
[2023-06-01T18:56:52.629320+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:99)"} []
[2023-06-01T18:56:52.629419+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:54)"} []
[2023-06-01T18:56:52.629515+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:41)"} []
[2023-06-01T18:56:52.629612+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:49)"} []
[2023-06-01T18:56:52.629716+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:57)"} []
[2023-06-01T18:56:52.629815+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:65)"} []
[2023-06-01T18:56:52.629912+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:73)"} []
[2023-06-01T18:56:52.630007+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:81)"} []
[2023-06-01T18:56:52.630102+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:89)"} []
[2023-06-01T18:56:52.630237+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:97)"} []
[2023-06-01T18:56:52.630337+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T18:56:52.630434+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T18:56:52.630529+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T18:56:52.630624+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T18:56:52.630732+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T18:56:52.630827+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T18:56:52.630921+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T18:56:52.631015+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T18:56:52.631112+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T18:56:52.631208+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T18:56:52.631304+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2023-06-01T18:56:52.631399+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2023-06-01T18:56:52.631496+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2023-06-01T18:57:01.576153+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2023-06-01T18:57:01.577610+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2023-06-01T18:57:01.577759+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2023-06-01T18:57:01.577859+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2023-06-01T18:57:01.577954+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2023-06-01T18:57:21.408484+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2023-06-01T18:57:21.409927+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2023-06-01T18:57:21.410032+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2023-06-01T18:57:21.410182+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2023-06-01T18:57:21.410280+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2023-06-01T18:59:33.968040+00:00] php.INFO: User Deprecated: Class "Symfony\Component\HttpClient\TraceableHttpClient" should implement method "Symfony\Contracts\HttpClient\HttpClientInterface::withOptions(array $options)": Returns a new instance of the client with new default options. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Class \"Symfony\\Component\\HttpClient\\TraceableHttpClient\" should implement method \"Symfony\\Contracts\\HttpClient\\HttpClientInterface::withOptions(array $options)\": Returns a new instance of the client with new default options. at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\error-handler\\DebugClassLoader.php:387)"} []
[2023-06-01T18:59:33.968417+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2023-06-01T18:59:33.968530+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2023-06-01T18:59:33.968632+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2023-06-01T18:59:33.968785+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2023-06-01T18:59:33.969003+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:34)"} []
[2023-06-01T18:59:33.969131+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:82)"} []
[2023-06-01T18:59:33.969234+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:105)"} []
[2023-06-01T18:59:33.969332+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:122)"} []
[2023-06-01T18:59:33.969474+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:62)"} []
[2023-06-01T18:59:33.969705+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:91)"} []
[2023-06-01T18:59:33.969813+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:99)"} []
[2023-06-01T18:59:33.969909+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:54)"} []
[2023-06-01T18:59:33.970038+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:41)"} []
[2023-06-01T18:59:33.970138+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:49)"} []
[2023-06-01T18:59:33.970235+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:57)"} []
[2023-06-01T18:59:33.970331+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:65)"} []
[2023-06-01T18:59:33.970428+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:73)"} []
[2023-06-01T18:59:33.970572+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:81)"} []
[2023-06-01T18:59:33.970671+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:89)"} []
[2023-06-01T18:59:33.970769+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:97)"} []
[2023-06-01T18:59:33.970868+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T18:59:33.970992+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T18:59:33.971093+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T18:59:33.971187+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T18:59:33.971284+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T18:59:33.971379+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T18:59:33.971474+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T18:59:33.971575+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T18:59:33.971669+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T18:59:33.971763+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T18:59:33.971863+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2023-06-01T18:59:33.972001+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2023-06-01T18:59:33.972106+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2023-06-01T18:59:36.620525+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2023-06-01T18:59:36.621944+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2023-06-01T18:59:36.622049+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2023-06-01T18:59:36.622146+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2023-06-01T18:59:36.622241+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2023-06-01T19:06:54.962786+00:00] php.INFO: User Deprecated: Class "Symfony\Component\HttpClient\TraceableHttpClient" should implement method "Symfony\Contracts\HttpClient\HttpClientInterface::withOptions(array $options)": Returns a new instance of the client with new default options. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Class \"Symfony\\Component\\HttpClient\\TraceableHttpClient\" should implement method \"Symfony\\Contracts\\HttpClient\\HttpClientInterface::withOptions(array $options)\": Returns a new instance of the client with new default options. at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\error-handler\\DebugClassLoader.php:387)"} []
[2023-06-01T19:06:54.963133+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2023-06-01T19:06:54.963244+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2023-06-01T19:06:54.963343+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2023-06-01T19:06:54.963439+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2023-06-01T19:06:54.963537+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:34)"} []
[2023-06-01T19:06:54.963688+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:82)"} []
[2023-06-01T19:06:54.963788+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:105)"} []
[2023-06-01T19:06:54.963887+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:122)"} []
[2023-06-01T19:06:54.963983+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:62)"} []
[2023-06-01T19:06:54.964080+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:91)"} []
[2023-06-01T19:06:54.964203+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:99)"} []
[2023-06-01T19:06:54.964302+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:54)"} []
[2023-06-01T19:06:54.964399+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:41)"} []
[2023-06-01T19:06:54.964495+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:49)"} []
[2023-06-01T19:06:54.964592+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:57)"} []
[2023-06-01T19:06:54.964689+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:65)"} []
[2023-06-01T19:06:54.964785+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:73)"} []
[2023-06-01T19:06:54.964881+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:81)"} []
[2023-06-01T19:06:54.964977+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:89)"} []
[2023-06-01T19:06:54.965098+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:97)"} []
[2023-06-01T19:06:54.965205+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T19:06:54.965301+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T19:06:54.965396+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T19:06:54.965491+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T19:06:54.965587+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T19:06:54.965682+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T19:06:54.965776+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T19:06:54.965873+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T19:06:54.965969+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T19:06:54.966069+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2023-06-01T19:06:54.966166+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2023-06-01T19:06:54.966264+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2023-06-01T19:06:54.966359+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2023-06-01T19:06:57.208384+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2023-06-01T19:06:57.209800+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2023-06-01T19:06:57.209956+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2023-06-01T19:06:57.210056+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2023-06-01T19:06:57.210151+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2025-04-01T13:20:07.220203+00:00] php.INFO: User Deprecated: Class "Symfony\Component\HttpClient\TraceableHttpClient" should implement method "Symfony\Contracts\HttpClient\HttpClientInterface::withOptions(array $options)": Returns a new instance of the client with new default options. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Class \"Symfony\\Component\\HttpClient\\TraceableHttpClient\" should implement method \"Symfony\\Contracts\\HttpClient\\HttpClientInterface::withOptions(array $options)\": Returns a new instance of the client with new default options. at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\error-handler\\DebugClassLoader.php:387)"} []
[2025-04-01T13:20:07.235327+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2025-04-01T13:20:07.235466+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2025-04-01T13:20:07.235617+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2025-04-01T13:20:07.235726+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2025-04-01T13:20:07.235828+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:34)"} []
[2025-04-01T13:20:07.235931+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:82)"} []
[2025-04-01T13:20:07.236032+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:105)"} []
[2025-04-01T13:20:07.236159+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:122)"} []
[2025-04-01T13:20:07.236264+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:62)"} []
[2025-04-01T13:20:07.236366+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:91)"} []
[2025-04-01T13:20:07.236467+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:99)"} []
[2025-04-01T13:20:07.236564+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:54)"} []
[2025-04-01T13:20:07.236648+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:41)"} []
[2025-04-01T13:20:07.236731+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:49)"} []
[2025-04-01T13:20:07.236813+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:57)"} []
[2025-04-01T13:20:07.236896+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:65)"} []
[2025-04-01T13:20:07.237009+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:73)"} []
[2025-04-01T13:20:07.237096+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:81)"} []
[2025-04-01T13:20:07.237178+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:89)"} []
[2025-04-01T13:20:07.237260+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:97)"} []
[2025-04-01T13:20:07.237343+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-01T13:20:07.237424+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-01T13:20:07.237508+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-01T13:20:07.237590+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-01T13:20:07.237671+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-01T13:20:07.237751+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-01T13:20:07.237831+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-01T13:20:07.237911+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-01T13:20:07.237992+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-01T13:20:07.238071+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-01T13:20:07.238152+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2025-04-01T13:20:07.238233+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2025-04-01T13:20:07.238317+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2025-04-01T13:20:20.284281+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2025-04-01T13:20:20.285889+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2025-04-01T13:20:20.285986+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2025-04-01T13:20:20.286070+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2025-04-01T13:20:20.286189+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2025-04-01T13:26:23.924532+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2025-04-01T13:26:23.926211+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2025-04-01T13:26:23.926307+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2025-04-01T13:26:23.926393+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2025-04-01T13:26:23.926475+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2025-04-01T13:26:24.093765+00:00] php.DEBUG: Warning: include(D:\Github\Groupe6\symfony\projetTest\var\cache\de_/App_KernelDevDebugContainer.php): Failed to open stream: No such file or directory {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-kernel\\Kernel.php","line":461,"trace":[{"file":"D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-kernel\\Kernel.php","line":461,"function":"include"}],"count":1}}} []
[2025-04-01T13:26:24.093910+00:00] php.DEBUG: Warning: include(): Failed opening 'D:\Github\Groupe6\symfony\projetTest\var\cache\de_/App_KernelDevDebugContainer.php' for inclusion (include_path='.;D:/laragon/etc/php/pear') [] []
[2025-04-01T13:26:25.636759+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2025-04-01T13:26:25.636937+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2025-04-01T13:26:25.638671+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2025-04-01T13:26:25.638813+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2025-04-01T13:26:25.640729+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:34)"} []
[2025-04-01T13:26:25.640928+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:82)"} []
[2025-04-01T13:26:25.641063+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:105)"} []
[2025-04-01T13:26:25.641190+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:122)"} []
[2025-04-01T13:26:25.641317+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:62)"} []
[2025-04-01T13:26:25.641617+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:91)"} []
[2025-04-01T13:26:25.641759+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:99)"} []
[2025-04-01T13:26:25.641885+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:54)"} []
[2025-04-01T13:26:25.642707+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:41)"} []
[2025-04-01T13:26:25.642846+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:49)"} []
[2025-04-01T13:26:25.642977+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:57)"} []
[2025-04-01T13:26:25.643105+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:65)"} []
[2025-04-01T13:26:25.643230+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:73)"} []
[2025-04-01T13:26:25.643354+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:81)"} []
[2025-04-01T13:26:25.643479+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:89)"} []
[2025-04-01T13:26:25.643633+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:97)"} []
[2025-04-01T13:26:25.875111+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-01T13:26:25.875290+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-01T13:26:25.875414+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-01T13:26:25.875881+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-01T13:26:25.876146+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-01T13:26:25.876276+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-01T13:26:25.877046+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-01T13:26:25.877185+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-01T13:26:25.877423+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-01T13:26:25.877552+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-01T13:26:39.636641+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2025-04-01T13:26:39.639047+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2025-04-01T13:26:39.639148+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2025-04-01T13:26:39.639247+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2025-04-01T13:26:39.639333+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2025-04-02T08:22:47.498774+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2025-04-02T08:22:47.523679+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2025-04-02T08:22:47.523831+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2025-04-02T08:22:47.523921+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2025-04-02T08:22:47.524007+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2025-04-02T08:22:49.508657+00:00] php.DEBUG: Warning: include(D:\Github\Groupe6\symfony\projetTest\var\cache\de_/App_KernelDevDebugContainer.php): Failed to open stream: No such file or directory {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-kernel\\Kernel.php","line":461,"trace":[{"file":"D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-kernel\\Kernel.php","line":461,"function":"include"}],"count":1}}} []
[2025-04-02T08:22:49.508865+00:00] php.DEBUG: Warning: include(): Failed opening 'D:\Github\Groupe6\symfony\projetTest\var\cache\de_/App_KernelDevDebugContainer.php' for inclusion (include_path='.;D:/laragon/etc/php/pear') [] []
[2025-04-02T08:22:52.494422+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2025-04-02T08:22:52.494621+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2025-04-02T08:22:52.496669+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2025-04-02T08:22:52.496840+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2025-04-02T08:22:52.499176+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:34)"} []
[2025-04-02T08:22:52.499406+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:82)"} []
[2025-04-02T08:22:52.499553+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:105)"} []
[2025-04-02T08:22:52.499701+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:122)"} []
[2025-04-02T08:22:52.499843+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:62)"} []
[2025-04-02T08:22:52.500187+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:91)"} []
[2025-04-02T08:22:52.500335+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:99)"} []
[2025-04-02T08:22:52.500472+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:54)"} []
[2025-04-02T08:22:52.501496+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:41)"} []
[2025-04-02T08:22:52.501671+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:49)"} []
[2025-04-02T08:22:52.501824+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:57)"} []
[2025-04-02T08:22:52.502010+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:65)"} []
[2025-04-02T08:22:52.502150+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:73)"} []
[2025-04-02T08:22:52.502284+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:81)"} []
[2025-04-02T08:22:52.502415+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:89)"} []
[2025-04-02T08:22:52.502550+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:97)"} []
[2025-04-02T08:22:53.087984+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:22:53.088194+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:22:53.088332+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:22:53.088859+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:22:53.089163+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:22:53.089310+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:22:53.090161+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:22:53.090318+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:22:53.090585+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:22:53.090728+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:23:12.210530+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2025-04-02T08:23:12.212460+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2025-04-02T08:23:12.212572+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2025-04-02T08:23:12.212661+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2025-04-02T08:23:12.212747+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2025-04-02T08:25:29.072591+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2025-04-02T08:25:29.075028+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2025-04-02T08:25:29.075133+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2025-04-02T08:25:29.075222+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2025-04-02T08:25:29.075308+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2025-04-02T08:25:29.351388+00:00] php.DEBUG: Warning: include(D:\Github\Groupe6\symfony\projetTest\var\cache\de_/App_KernelDevDebugContainer.php): Failed to open stream: No such file or directory {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-kernel\\Kernel.php","line":461,"trace":[{"file":"D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-kernel\\Kernel.php","line":461,"function":"include"}],"count":1}}} []
[2025-04-02T08:25:29.351597+00:00] php.DEBUG: Warning: include(): Failed opening 'D:\Github\Groupe6\symfony\projetTest\var\cache\de_/App_KernelDevDebugContainer.php' for inclusion (include_path='.;D:/laragon/etc/php/pear') [] []
[2025-04-02T08:25:30.939823+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2025-04-02T08:25:30.940011+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2025-04-02T08:25:30.941989+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2025-04-02T08:25:30.942156+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2025-04-02T08:25:30.944948+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:34)"} []
[2025-04-02T08:25:30.945214+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:82)"} []
[2025-04-02T08:25:30.945449+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:105)"} []
[2025-04-02T08:25:30.945599+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:122)"} []
[2025-04-02T08:25:30.945788+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:62)"} []
[2025-04-02T08:25:30.946147+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:91)"} []
[2025-04-02T08:25:30.946305+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:99)"} []
[2025-04-02T08:25:30.946443+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:54)"} []
[2025-04-02T08:25:30.947672+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:41)"} []
[2025-04-02T08:25:30.947852+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:49)"} []
[2025-04-02T08:25:30.947988+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:57)"} []
[2025-04-02T08:25:30.948127+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:65)"} []
[2025-04-02T08:25:30.948261+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:73)"} []
[2025-04-02T08:25:30.948392+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:81)"} []
[2025-04-02T08:25:30.948523+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:89)"} []
[2025-04-02T08:25:30.948661+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:97)"} []
[2025-04-02T08:25:31.213496+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:25:31.213697+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:25:31.213831+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:25:31.214355+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:25:31.214649+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:25:31.214792+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:25:31.215654+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:25:31.215805+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:25:31.216061+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:25:31.216268+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:29:24.844668+00:00] php.INFO: User Deprecated: Class "Symfony\Component\HttpClient\TraceableHttpClient" should implement method "Symfony\Contracts\HttpClient\HttpClientInterface::withOptions(array $options)": Returns a new instance of the client with new default options. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Class \"Symfony\\Component\\HttpClient\\TraceableHttpClient\" should implement method \"Symfony\\Contracts\\HttpClient\\HttpClientInterface::withOptions(array $options)\": Returns a new instance of the client with new default options. at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\error-handler\\DebugClassLoader.php:387)"} []
[2025-04-02T08:29:24.845096+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2025-04-02T08:29:24.845204+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2025-04-02T08:29:24.845294+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2025-04-02T08:29:24.845389+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2025-04-02T08:29:24.845518+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:34)"} []
[2025-04-02T08:29:24.845610+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:82)"} []
[2025-04-02T08:29:24.845696+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:105)"} []
[2025-04-02T08:29:24.845782+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:122)"} []
[2025-04-02T08:29:24.845868+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:62)"} []
[2025-04-02T08:29:24.845978+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:91)"} []
[2025-04-02T08:29:24.846068+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:99)"} []
[2025-04-02T08:29:24.846202+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:54)"} []
[2025-04-02T08:29:24.846369+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:41)"} []
[2025-04-02T08:29:24.846477+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:49)"} []
[2025-04-02T08:29:24.846585+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:57)"} []
[2025-04-02T08:29:24.846678+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:65)"} []
[2025-04-02T08:29:24.846766+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:73)"} []
[2025-04-02T08:29:24.846853+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:81)"} []
[2025-04-02T08:29:24.846938+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:89)"} []
[2025-04-02T08:29:24.847027+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:97)"} []
[2025-04-02T08:29:24.847115+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:29:24.847201+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:29:24.847285+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:29:24.847370+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:29:24.847534+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:29:24.847639+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:29:24.847724+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:29:24.847858+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:29:24.848059+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:29:24.848197+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:29:24.848338+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2025-04-02T08:29:24.848487+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2025-04-02T08:29:24.848599+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2025-04-02T08:29:35.666047+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2025-04-02T08:29:35.667934+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2025-04-02T08:29:35.668042+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2025-04-02T08:29:35.668134+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2025-04-02T08:29:35.668223+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2025-04-02T08:33:04.582809+00:00] php.INFO: User Deprecated: Class "Symfony\Component\HttpClient\TraceableHttpClient" should implement method "Symfony\Contracts\HttpClient\HttpClientInterface::withOptions(array $options)": Returns a new instance of the client with new default options. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Class \"Symfony\\Component\\HttpClient\\TraceableHttpClient\" should implement method \"Symfony\\Contracts\\HttpClient\\HttpClientInterface::withOptions(array $options)\": Returns a new instance of the client with new default options. at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\error-handler\\DebugClassLoader.php:387)"} []
[2025-04-02T08:33:04.583252+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2025-04-02T08:33:04.583404+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2025-04-02T08:33:04.583505+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2025-04-02T08:33:04.583616+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2025-04-02T08:33:04.583738+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:34)"} []
[2025-04-02T08:33:04.583832+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:82)"} []
[2025-04-02T08:33:04.583956+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:105)"} []
[2025-04-02T08:33:04.584083+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:122)"} []
[2025-04-02T08:33:04.584177+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:62)"} []
[2025-04-02T08:33:04.584265+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:91)"} []
[2025-04-02T08:33:04.584350+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:99)"} []
[2025-04-02T08:33:04.584440+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:54)"} []
[2025-04-02T08:33:04.584534+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:41)"} []
[2025-04-02T08:33:04.584620+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:49)"} []
[2025-04-02T08:33:04.584706+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:57)"} []
[2025-04-02T08:33:04.584791+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:65)"} []
[2025-04-02T08:33:04.584988+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:73)"} []
[2025-04-02T08:33:04.585115+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:81)"} []
[2025-04-02T08:33:04.585222+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:89)"} []
[2025-04-02T08:33:04.585309+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:97)"} []
[2025-04-02T08:33:04.585434+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:33:04.585530+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:33:04.585615+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:33:04.585699+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:33:04.585783+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:33:04.585877+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:33:04.585961+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:33:04.586044+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:33:04.586128+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:33:04.586211+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:33:04.586294+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2025-04-02T08:33:04.586384+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2025-04-02T08:33:04.586471+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2025-04-02T08:33:14.951387+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2025-04-02T08:33:14.953475+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2025-04-02T08:33:14.953587+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2025-04-02T08:33:14.953675+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2025-04-02T08:33:14.953803+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2025-04-02T08:34:56.820858+00:00] php.INFO: User Deprecated: Class "Symfony\Component\HttpClient\TraceableHttpClient" should implement method "Symfony\Contracts\HttpClient\HttpClientInterface::withOptions(array $options)": Returns a new instance of the client with new default options. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Class \"Symfony\\Component\\HttpClient\\TraceableHttpClient\" should implement method \"Symfony\\Contracts\\HttpClient\\HttpClientInterface::withOptions(array $options)\": Returns a new instance of the client with new default options. at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\error-handler\\DebugClassLoader.php:387)"} []
[2025-04-02T08:34:56.821262+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2025-04-02T08:34:56.821366+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2025-04-02T08:34:56.821453+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2025-04-02T08:34:56.821580+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2025-04-02T08:34:56.821671+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:34)"} []
[2025-04-02T08:34:56.821759+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:82)"} []
[2025-04-02T08:34:56.821843+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:105)"} []
[2025-04-02T08:34:56.821928+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:122)"} []
[2025-04-02T08:34:56.822042+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:62)"} []
[2025-04-02T08:34:56.822132+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:91)"} []
[2025-04-02T08:34:56.822217+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:99)"} []
[2025-04-02T08:34:56.822301+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:54)"} []
[2025-04-02T08:34:56.822385+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:41)"} []
[2025-04-02T08:34:56.822472+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:49)"} []
[2025-04-02T08:34:56.822560+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:57)"} []
[2025-04-02T08:34:56.822644+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:65)"} []
[2025-04-02T08:34:56.822738+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:73)"} []
[2025-04-02T08:34:56.822830+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:81)"} []
[2025-04-02T08:34:56.823002+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:89)"} []
[2025-04-02T08:34:56.823095+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:97)"} []
[2025-04-02T08:34:56.823182+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:34:56.823268+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:34:56.823352+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:34:56.823435+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:34:56.823518+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:34:56.823605+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:34:56.823689+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:34:56.823772+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:34:56.823856+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:34:56.823939+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:34:56.824023+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2025-04-02T08:34:56.824109+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2025-04-02T08:34:56.824193+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2025-04-02T08:35:07.352852+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2025-04-02T08:35:07.355285+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2025-04-02T08:35:07.355390+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2025-04-02T08:35:07.355479+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2025-04-02T08:35:07.355566+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2025-04-02T08:39:01.755703+00:00] php.INFO: User Deprecated: Class "Symfony\Component\HttpClient\TraceableHttpClient" should implement method "Symfony\Contracts\HttpClient\HttpClientInterface::withOptions(array $options)": Returns a new instance of the client with new default options. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Class \"Symfony\\Component\\HttpClient\\TraceableHttpClient\" should implement method \"Symfony\\Contracts\\HttpClient\\HttpClientInterface::withOptions(array $options)\": Returns a new instance of the client with new default options. at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\error-handler\\DebugClassLoader.php:387)"} []
[2025-04-02T08:39:01.756175+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2025-04-02T08:39:01.756283+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2025-04-02T08:39:01.756373+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2025-04-02T08:39:01.756458+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2025-04-02T08:39:01.756543+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:34)"} []
[2025-04-02T08:39:01.756664+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:82)"} []
[2025-04-02T08:39:01.756753+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:105)"} []
[2025-04-02T08:39:01.756838+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:122)"} []
[2025-04-02T08:39:01.756933+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:62)"} []
[2025-04-02T08:39:01.757017+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:91)"} []
[2025-04-02T08:39:01.757103+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:99)"} []
[2025-04-02T08:39:01.757187+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:54)"} []
[2025-04-02T08:39:01.757271+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:41)"} []
[2025-04-02T08:39:01.757355+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:49)"} []
[2025-04-02T08:39:01.757438+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:57)"} []
[2025-04-02T08:39:01.757552+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:65)"} []
[2025-04-02T08:39:01.757640+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:73)"} []
[2025-04-02T08:39:01.757724+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:81)"} []
[2025-04-02T08:39:01.757809+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:89)"} []
[2025-04-02T08:39:01.757928+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:97)"} []
[2025-04-02T08:39:01.758017+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:01.758103+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:01.758187+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:01.758269+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:01.758351+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:01.758433+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:01.758516+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:01.758598+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:01.758681+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:01.758767+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:01.758850+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2025-04-02T08:39:01.758942+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2025-04-02T08:39:01.759027+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2025-04-02T08:39:16.968597+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2025-04-02T08:39:16.970705+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2025-04-02T08:39:16.970809+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2025-04-02T08:39:16.970936+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2025-04-02T08:39:16.971024+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2025-04-02T08:39:30.464465+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2025-04-02T08:39:30.466373+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2025-04-02T08:39:30.466480+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2025-04-02T08:39:30.466605+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2025-04-02T08:39:30.466694+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2025-04-02T08:39:30.741995+00:00] php.DEBUG: Warning: include(D:\Github\Groupe6\symfony\projetTest\var\cache\de_/App_KernelDevDebugContainer.php): Failed to open stream: No such file or directory {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-kernel\\Kernel.php","line":461,"trace":[{"file":"D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-kernel\\Kernel.php","line":461,"function":"include"}],"count":1}}} []
[2025-04-02T08:39:30.742158+00:00] php.DEBUG: Warning: include(): Failed opening 'D:\Github\Groupe6\symfony\projetTest\var\cache\de_/App_KernelDevDebugContainer.php' for inclusion (include_path='.;D:/laragon/etc/php/pear') [] []
[2025-04-02T08:39:32.346465+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2025-04-02T08:39:32.346660+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2025-04-02T08:39:32.348596+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2025-04-02T08:39:32.348809+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2025-04-02T08:39:32.351069+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:34)"} []
[2025-04-02T08:39:32.351255+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:82)"} []
[2025-04-02T08:39:32.351406+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:105)"} []
[2025-04-02T08:39:32.351541+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:122)"} []
[2025-04-02T08:39:32.351688+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:62)"} []
[2025-04-02T08:39:32.352028+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:91)"} []
[2025-04-02T08:39:32.352171+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:99)"} []
[2025-04-02T08:39:32.352302+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:54)"} []
[2025-04-02T08:39:32.353242+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:41)"} []
[2025-04-02T08:39:32.353409+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:49)"} []
[2025-04-02T08:39:32.353546+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:57)"} []
[2025-04-02T08:39:32.353678+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:65)"} []
[2025-04-02T08:39:32.353808+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:73)"} []
[2025-04-02T08:39:32.353938+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:81)"} []
[2025-04-02T08:39:32.354123+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:89)"} []
[2025-04-02T08:39:32.354257+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:97)"} []
[2025-04-02T08:39:32.605329+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:32.605519+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:32.605660+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:32.606158+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:32.606458+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:32.606598+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:32.607528+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:32.607696+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:32.607961+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:32.608100+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:45.654821+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2025-04-02T08:39:45.657546+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2025-04-02T08:39:45.657649+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2025-04-02T08:39:45.657784+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2025-04-02T08:39:45.657879+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2025-04-02T08:39:57.084619+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2025-04-02T08:39:57.086549+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2025-04-02T08:39:57.086653+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2025-04-02T08:39:57.086740+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2025-04-02T08:39:57.086865+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2025-04-02T08:39:57.442059+00:00] php.DEBUG: Warning: include(D:\Github\Groupe6\symfony\projetTest\var\cache\de_/App_KernelDevDebugContainer.php): Failed to open stream: No such file or directory {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-kernel\\Kernel.php","line":461,"trace":[{"file":"D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-kernel\\Kernel.php","line":461,"function":"include"}],"count":1}}} []
[2025-04-02T08:39:57.442212+00:00] php.DEBUG: Warning: include(): Failed opening 'D:\Github\Groupe6\symfony\projetTest\var\cache\de_/App_KernelDevDebugContainer.php' for inclusion (include_path='.;D:/laragon/etc/php/pear') [] []
[2025-04-02T08:39:59.058996+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2025-04-02T08:39:59.059189+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2025-04-02T08:39:59.061114+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2025-04-02T08:39:59.061319+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2025-04-02T08:39:59.063461+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:34)"} []
[2025-04-02T08:39:59.063622+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:82)"} []
[2025-04-02T08:39:59.063759+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:105)"} []
[2025-04-02T08:39:59.063892+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:122)"} []
[2025-04-02T08:39:59.064034+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:62)"} []
[2025-04-02T08:39:59.064359+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:91)"} []
[2025-04-02T08:39:59.064500+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:99)"} []
[2025-04-02T08:39:59.064639+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:54)"} []
[2025-04-02T08:39:59.065543+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:41)"} []
[2025-04-02T08:39:59.065730+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:49)"} []
[2025-04-02T08:39:59.065868+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:57)"} []
[2025-04-02T08:39:59.065998+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:65)"} []
[2025-04-02T08:39:59.066129+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:73)"} []
[2025-04-02T08:39:59.066257+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:81)"} []
[2025-04-02T08:39:59.066390+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:89)"} []
[2025-04-02T08:39:59.066520+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:97)"} []
[2025-04-02T08:39:59.316223+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:59.316422+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:59.316557+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:59.317101+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:59.317389+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:59.317546+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:59.318384+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:59.318531+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:59.318790+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:39:59.318937+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:40:11.341103+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2025-04-02T08:40:11.343052+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2025-04-02T08:40:11.343159+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2025-04-02T08:40:11.343297+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2025-04-02T08:40:11.343389+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2025-04-02T08:40:46.417198+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:205)"} []
[2025-04-02T08:40:46.419803+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\ParameterBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\ParameterBag.php:215)"} []
[2025-04-02T08:40:46.419909+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:255)"} []
[2025-04-02T08:40:46.419998+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\HeaderBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\HeaderBag.php:265)"} []
[2025-04-02T08:40:46.420132+00:00] php.INFO: Deprecated: Return type of Symfony\Component\Console\Helper\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Console\\Helper\\HelperSet::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\console\\Helper\\HelperSet.php:94)"} []
[2025-04-02T08:40:46.696071+00:00] php.DEBUG: Warning: include(D:\Github\Groupe6\symfony\projetTest\var\cache\de_/App_KernelDevDebugContainer.php): Failed to open stream: No such file or directory {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-kernel\\Kernel.php","line":461,"trace":[{"file":"D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-kernel\\Kernel.php","line":461,"function":"include"}],"count":1}}} []
[2025-04-02T08:40:46.696227+00:00] php.DEBUG: Warning: include(): Failed opening 'D:\Github\Groupe6\symfony\projetTest\var\cache\de_/App_KernelDevDebugContainer.php' for inclusion (include_path='.;D:/laragon/etc/php/pear') [] []
[2025-04-02T08:40:48.325471+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2025-04-02T08:40:48.325670+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2025-04-02T08:40:48.327726+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:131)"} []
[2025-04-02T08:40:48.327894+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Session.php:141)"} []
[2025-04-02T08:40:48.330174+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:34)"} []
[2025-04-02T08:40:48.330349+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:82)"} []
[2025-04-02T08:40:48.330494+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:105)"} []
[2025-04-02T08:40:48.330627+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:122)"} []
[2025-04-02T08:40:48.330766+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:62)"} []
[2025-04-02T08:40:48.331101+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:91)"} []
[2025-04-02T08:40:48.331246+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:99)"} []
[2025-04-02T08:40:48.331394+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:54)"} []
[2025-04-02T08:40:48.332342+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:41)"} []
[2025-04-02T08:40:48.332501+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:49)"} []
[2025-04-02T08:40:48.332638+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:57)"} []
[2025-04-02T08:40:48.332770+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:65)"} []
[2025-04-02T08:40:48.332900+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:73)"} []
[2025-04-02T08:40:48.333135+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:81)"} []
[2025-04-02T08:40:48.333365+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:89)"} []
[2025-04-02T08:40:48.333513+00:00] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:97)"} []
[2025-04-02T08:40:48.604191+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:40:48.604439+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:40:48.604577+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:40:48.605193+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:40:48.605481+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:40:48.605633+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:40:48.606478+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:40:48.606630+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:40:48.606890+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
[2025-04-02T08:40:48.607026+00:00] php.INFO: Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: trim(): Passing null to parameter #1 ($string) of type string is deprecated at D:\\Github\\Groupe6\\symfony\\projetTest\\vendor\\symfony\\dependency-injection\\Dumper\\PhpDumper.php:2227)"} []
